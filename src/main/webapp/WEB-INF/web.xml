<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- 验证码的servlet -->
	<servlet>
		<servlet-name>CheckCodeServlet</servlet-name>
		<servlet-class>com.cyh.util.CheckCodeUtil</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CheckCodeServlet</servlet-name>
		<url-pattern>/login/checkCode</url-pattern>
	</servlet-mapping>

	<!-- 配置过滤器 -->
	<filter>
		<filter-name>MyFilter</filter-name>
		<filter-class>com.cyh.filter.MyFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MyFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext-*.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 监听session的销毁-->
	<listener>
		<listener-class>com.cyh.util.SessionListenerUtil</listener-class>
	</listener>

	<!-- 欢迎页-->
	<welcome-file-list>
		<welcome-file>/WEB-INF/jsp/login.jsp</welcome-file>
	</welcome-file-list>
  
	<!-- springmvc前端控制器 -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<!-- 第一种：*.action，访问以.action结尾 由DispatcherServlet进行解析 第二种：/，所以访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析 
			使用此种方式可以实现 RESTful风格的url 第三种：/*，这样配置不对，使用这种配置，最终要转发到一个jsp页面时， 仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错。 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
	
	 <!-- post乱码过虑器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <servlet>
        <servlet-name>top</servlet-name>
        <jsp-file>/WEB-INF/jsp/top.jsp</jsp-file>
    </servlet>
    <servlet>
        <servlet-name>left</servlet-name>
        <jsp-file>/WEB-INF/jsp/left.jsp</jsp-file>
    </servlet>
    <servlet>
        <servlet-name>index</servlet-name>
        <jsp-file>/WEB-INF/jsp/index.jsp</jsp-file>
    </servlet>
	<servlet>
		<servlet-name>main</servlet-name>
		<jsp-file>/WEB-INF/jsp/main.jsp</jsp-file>
	</servlet>
	<servlet>
		<servlet-name>webSocketChat</servlet-name>
		<jsp-file>/WEB-INF/jsp/webSocketChat.jsp</jsp-file>
	</servlet>
    <servlet>
        <servlet-name>login</servlet-name>
        <jsp-file>/WEB-INF/jsp/login.jsp</jsp-file>
    </servlet>

    <servlet-mapping>
        <servlet-name>top</servlet-name>
        <url-pattern>/top</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>left</servlet-name>
        <url-pattern>/left</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>index</servlet-name>
        <url-pattern>/index</url-pattern>
    </servlet-mapping>
	<servlet-mapping>
		<servlet-name>main</servlet-name>
		<url-pattern>/main</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>webSocketChat</servlet-name>
		<url-pattern>/webSocketChat</url-pattern>
	</servlet-mapping>
    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <url-pattern>/login</url-pattern>
    </servlet-mapping>
</web-app>
